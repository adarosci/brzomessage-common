// Code generated by protoc-gen-go. DO NOT EDIT.
// source: communication.proto

package communication

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The request message containing the user's name.
type UpdateFirebaseToken struct {
	KeyAccess            string   `protobuf:"bytes,1,opt,name=KeyAccess,proto3" json:"KeyAccess,omitempty"`
	FirebaseToken        string   `protobuf:"bytes,2,opt,name=FirebaseToken,proto3" json:"FirebaseToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateFirebaseToken) Reset()         { *m = UpdateFirebaseToken{} }
func (m *UpdateFirebaseToken) String() string { return proto.CompactTextString(m) }
func (*UpdateFirebaseToken) ProtoMessage()    {}
func (*UpdateFirebaseToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_b64068f22c460ac1, []int{0}
}

func (m *UpdateFirebaseToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateFirebaseToken.Unmarshal(m, b)
}
func (m *UpdateFirebaseToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateFirebaseToken.Marshal(b, m, deterministic)
}
func (m *UpdateFirebaseToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateFirebaseToken.Merge(m, src)
}
func (m *UpdateFirebaseToken) XXX_Size() int {
	return xxx_messageInfo_UpdateFirebaseToken.Size(m)
}
func (m *UpdateFirebaseToken) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateFirebaseToken.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateFirebaseToken proto.InternalMessageInfo

func (m *UpdateFirebaseToken) GetKeyAccess() string {
	if m != nil {
		return m.KeyAccess
	}
	return ""
}

func (m *UpdateFirebaseToken) GetFirebaseToken() string {
	if m != nil {
		return m.FirebaseToken
	}
	return ""
}

// The response message containing the greetings
type ResultMessages struct {
	Success              bool     `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Result               string   `protobuf:"bytes,4,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResultMessages) Reset()         { *m = ResultMessages{} }
func (m *ResultMessages) String() string { return proto.CompactTextString(m) }
func (*ResultMessages) ProtoMessage()    {}
func (*ResultMessages) Descriptor() ([]byte, []int) {
	return fileDescriptor_b64068f22c460ac1, []int{1}
}

func (m *ResultMessages) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResultMessages.Unmarshal(m, b)
}
func (m *ResultMessages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResultMessages.Marshal(b, m, deterministic)
}
func (m *ResultMessages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResultMessages.Merge(m, src)
}
func (m *ResultMessages) XXX_Size() int {
	return xxx_messageInfo_ResultMessages.Size(m)
}
func (m *ResultMessages) XXX_DiscardUnknown() {
	xxx_messageInfo_ResultMessages.DiscardUnknown(m)
}

var xxx_messageInfo_ResultMessages proto.InternalMessageInfo

func (m *ResultMessages) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *ResultMessages) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *ResultMessages) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ResultMessages) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func init() {
	proto.RegisterType((*UpdateFirebaseToken)(nil), "communication.UpdateFirebaseToken")
	proto.RegisterType((*ResultMessages)(nil), "communication.ResultMessages")
}

func init() { proto.RegisterFile("communication.proto", fileDescriptor_b64068f22c460ac1) }

var fileDescriptor_b64068f22c460ac1 = []byte{
	// 239 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x3f, 0x4b, 0xc4, 0x40,
	0x10, 0xc5, 0x8d, 0x7f, 0x4e, 0x6f, 0x24, 0x16, 0x73, 0x22, 0x8b, 0x28, 0xc8, 0x62, 0x61, 0x95,
	0x42, 0x3b, 0x3b, 0x4f, 0xb0, 0x11, 0xe1, 0x88, 0x5a, 0x58, 0x26, 0xeb, 0x70, 0x04, 0x4d, 0x26,
	0xcc, 0x6c, 0x0a, 0xfd, 0xf4, 0x72, 0xbb, 0x39, 0xce, 0x15, 0xcb, 0xf7, 0xf6, 0xcd, 0x63, 0x7e,
	0xb3, 0x30, 0x73, 0xdc, 0xb6, 0x43, 0xd7, 0xb8, 0xca, 0x37, 0xdc, 0x15, 0xbd, 0xb0, 0x67, 0xcc,
	0x13, 0xd3, 0xbe, 0xc1, 0xec, 0xb5, 0x7f, 0xaf, 0x3c, 0x3d, 0x34, 0x42, 0x75, 0xa5, 0xf4, 0xc2,
	0x1f, 0xd4, 0xe1, 0x19, 0x4c, 0x1f, 0xe9, 0xeb, 0xce, 0x39, 0x52, 0x35, 0xd9, 0x45, 0x76, 0x35,
	0x2d, 0x37, 0x06, 0x5e, 0x42, 0x9e, 0xc4, 0xcd, 0x76, 0x48, 0xa4, 0xa6, 0x15, 0x38, 0x2a, 0x49,
	0x87, 0x4f, 0xff, 0x44, 0xaa, 0xd5, 0x92, 0x14, 0x0d, 0xec, 0x3f, 0x0f, 0x9b, 0xce, 0x83, 0x72,
	0x2d, 0xf1, 0x18, 0xf6, 0x48, 0x84, 0x65, 0x6c, 0x8a, 0x62, 0x95, 0x6f, 0xe3, 0xac, 0xd9, 0x09,
	0xfe, 0x5a, 0xe2, 0x09, 0x4c, 0x24, 0x74, 0x9b, 0xdd, 0xf0, 0x30, 0xaa, 0x6b, 0x07, 0xf9, 0xfd,
	0x6f, 0x3e, 0x2c, 0xe1, 0x30, 0xf2, 0x45, 0x2e, 0x5b, 0xa4, 0x37, 0xf9, 0x87, 0xfd, 0xf4, 0xfc,
	0x4f, 0x26, 0x85, 0xb0, 0x5b, 0xf3, 0x5b, 0xb0, 0x0d, 0x17, 0x4b, 0xe9, 0x5d, 0x51, 0xcb, 0x37,
	0x8f, 0x3b, 0x69, 0x3a, 0x36, 0xc7, 0x64, 0x91, 0xc5, 0xea, 0xf8, 0x8b, 0xac, 0x9e, 0x84, 0x5f,
	0xb8, 0xf9, 0x09, 0x00, 0x00, 0xff, 0xff, 0xbe, 0x0d, 0xf5, 0x5e, 0x9c, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CommunicationClient is the client API for Communication service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CommunicationClient interface {
	// Sends a greeting
	UpdateToken(ctx context.Context, in *UpdateFirebaseToken, opts ...grpc.CallOption) (*ResultMessages, error)
}

type communicationClient struct {
	cc *grpc.ClientConn
}

func NewCommunicationClient(cc *grpc.ClientConn) CommunicationClient {
	return &communicationClient{cc}
}

func (c *communicationClient) UpdateToken(ctx context.Context, in *UpdateFirebaseToken, opts ...grpc.CallOption) (*ResultMessages, error) {
	out := new(ResultMessages)
	err := c.cc.Invoke(ctx, "/communication.Communication/UpdateToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CommunicationServer is the server API for Communication service.
type CommunicationServer interface {
	// Sends a greeting
	UpdateToken(context.Context, *UpdateFirebaseToken) (*ResultMessages, error)
}

// UnimplementedCommunicationServer can be embedded to have forward compatible implementations.
type UnimplementedCommunicationServer struct {
}

func (*UnimplementedCommunicationServer) UpdateToken(ctx context.Context, req *UpdateFirebaseToken) (*ResultMessages, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateToken not implemented")
}

func RegisterCommunicationServer(s *grpc.Server, srv CommunicationServer) {
	s.RegisterService(&_Communication_serviceDesc, srv)
}

func _Communication_UpdateToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateFirebaseToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommunicationServer).UpdateToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/communication.Communication/UpdateToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommunicationServer).UpdateToken(ctx, req.(*UpdateFirebaseToken))
	}
	return interceptor(ctx, in, info, handler)
}

var _Communication_serviceDesc = grpc.ServiceDesc{
	ServiceName: "communication.Communication",
	HandlerType: (*CommunicationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateToken",
			Handler:    _Communication_UpdateToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "communication.proto",
}
